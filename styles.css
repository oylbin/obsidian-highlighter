/*
Obsidian Text Highlighter Plugin - Styles
*/

/* Settings UI Styles */
.highlighter-settings {
	padding: 20px;
}

.highlighter-color-list {
	margin: 15px 0;
	border: 1px solid var(--background-modifier-border);
	border-radius: var(--radius-s);
	padding: 10px;
	background: var(--background-secondary);
}

.highlighter-color-item {
	display: flex;
	align-items: center;
	padding: 8px 12px;
	margin: 5px 0;
	border: 1px solid var(--background-modifier-border);
	border-radius: var(--radius-s);
	background: var(--background-primary);
	transition: background-color 0.2s ease;
}

.highlighter-color-item:hover {
	background: var(--background-modifier-hover);
}

.highlighter-color-preview {
	width: 40px;
	height: 30px;
	border: 1px solid var(--background-modifier-border);
	border-radius: var(--radius-s);
	margin-right: 12px;
	display: flex;
	align-items: center;
	justify-content: center;
	font-family: var(--font-monospace);
	font-size: 14px;
	font-weight: bold;
	text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
	flex-shrink: 0;
}

.highlighter-color-item > div:nth-child(2) {
	flex: 1;
	margin-right: 10px;
}

.highlighter-color-item strong {
	color: var(--text-normal);
	font-size: 14px;
	display: block;
	margin-bottom: 2px;
}

.highlighter-color-item .setting-item-description {
	color: var(--text-muted);
	font-size: 12px;
	margin: 0;
}

.highlighter-color-item .setting-item-description code {
	background: var(--background-modifier-border);
	padding: 2px 4px;
	border-radius: 3px;
	font-size: 11px;
}

.highlighter-delete-color {
	background: var(--interactive-accent);
	color: var(--text-on-accent);
	border: none;
	padding: 6px 12px;
	border-radius: var(--radius-s);
	cursor: pointer;
	font-size: 12px;
	transition: background-color 0.2s ease;
	flex-shrink: 0;
}

.highlighter-delete-color:hover {
	background: var(--interactive-accent-hover);
}

.highlighter-add-color {
	background: var(--interactive-accent);
	color: var(--text-on-accent);
	border: none;
	padding: 8px 16px;
	border-radius: var(--radius-s);
	cursor: pointer;
	font-size: 14px;
	transition: background-color 0.2s ease;
	margin-top: 10px;
}

.highlighter-add-color:hover {
	background: var(--interactive-accent-hover);
}

.highlighter-color-form {
	background: var(--background-secondary);
	border: 1px solid var(--background-modifier-border);
	border-radius: var(--radius-s);
	padding: 20px;
	margin: 15px 0;
}

.highlighter-color-form .setting-item {
	border: none;
	padding: 10px 0;
}

.highlighter-color-form .setting-item-info {
	margin-right: 20px;
}

.highlighter-color-form .setting-item-control input[type="text"] {
	width: 200px;
}

.highlighter-error {
	color: var(--text-error);
	background: var(--background-modifier-error);
	border: 1px solid var(--text-error);
	border-radius: var(--radius-s);
	padding: 10px;
	margin: 10px 0;
	font-size: 14px;
}

/* Empty state styling */
.highlighter-color-list p.setting-item-description {
	text-align: center;
	padding: 20px;
	color: var(--text-muted);
	font-style: italic;
}

/* Form validation states */
.highlighter-color-form .setting-item.has-error .setting-item-control input {
	border-color: var(--text-error);
	background: var(--background-modifier-error);
}

.highlighter-color-form .setting-item.has-success .setting-item-control input {
	border-color: var(--text-success);
	background: var(--background-modifier-success);
}

/* Responsive design for smaller screens */
@media (max-width: 768px) {
	.highlighter-color-item {
		flex-direction: column;
		align-items: flex-start;
		gap: 10px;
	}

	.highlighter-color-preview {
		margin-right: 0;
		margin-bottom: 5px;
	}

	.highlighter-color-form .setting-item {
		flex-direction: column;
	}

	.highlighter-color-form .setting-item-info {
		margin-right: 0;
		margin-bottom: 10px;
	}

	.highlighter-color-form .setting-item-control input[type="text"] {
		width: 100%;
	}
}

/* Dark theme adjustments */
.theme-dark .highlighter-color-preview {
	text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.3);
}

/* High contrast mode adjustments */
@media (prefers-contrast: high) {
	.highlighter-color-preview {
		border-width: 2px;
	}

	.highlighter-color-item {
		border-width: 2px;
	}
}

/* Animation for adding/removing colors */
.highlighter-color-item {
	animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
	from {
		opacity: 0;
		transform: translateY(-10px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

/* Focus states for accessibility */
.highlighter-delete-color:focus,
.highlighter-add-color:focus {
	outline: 2px solid var(--text-accent);
	outline-offset: 2px;
}

.highlighter-color-form input:focus {
	outline: 2px solid var(--text-accent);
	outline-offset: 1px;
}

/* Tooltip styles for color preview */
.highlighter-color-preview {
	position: relative;
}

.highlighter-color-preview::before {
	content: 'Sample text';
	position: absolute;
	top: -30px;
	left: 50%;
	transform: translateX(-50%);
	background: var(--background-tooltip);
	color: var(--text-tooltip);
	padding: 4px 8px;
	border-radius: var(--radius-s);
	font-size: 11px;
	white-space: nowrap;
	opacity: 0;
	pointer-events: none;
	transition: opacity 0.2s ease;
	z-index: 1000;
}

.highlighter-color-preview:hover::before {
	opacity: 1;
}

/* Section headers styling */
.highlighter-settings h2 {
	color: var(--text-title-h2);
	border-bottom: 1px solid var(--background-modifier-border);
	padding-bottom: 5px;
	margin-bottom: 20px;
}

.highlighter-settings h3 {
	color: var(--text-title-h3);
	margin-top: 25px;
	margin-bottom: 10px;
}

/* Success notification styling */
.notice.highlighter-success {
	background: var(--background-modifier-success);
	border-left: 4px solid var(--text-success);
}

/* Loading state for async operations */
.highlighter-loading {
	opacity: 0.6;
	pointer-events: none;
	position: relative;
}

.highlighter-loading::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 20px;
	height: 20px;
	border: 2px solid var(--background-modifier-border);
	border-top: 2px solid var(--text-accent);
	border-radius: 50%;
	animation: spin 1s linear infinite;
}

@keyframes spin {
	0% { transform: translate(-50%, -50%) rotate(0deg); }
	100% { transform: translate(-50%, -50%) rotate(360deg); }
}